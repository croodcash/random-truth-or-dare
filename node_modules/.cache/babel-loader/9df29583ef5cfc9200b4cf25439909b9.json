{"ast":null,"code":"var _jsxFileName = \"S:\\\\Work\\\\random-truth-or-dare\\\\src\\\\Rand.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Spinner from 'react-spinkit';\nimport './Rand.css';\nimport getData from './Data.js';\n\nclass Rand extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      type: \"Hello\",\n      number: -1,\n      message: \"WELCOME TO TRUTH OR DARE RANDOMIZER\"\n    };\n  }\n\n  getRandomWithOneExclusion(lengthOfArray, indexToExclude) {\n    var rand = null; //an integer\n\n    while (rand === null || rand === indexToExclude) {\n      rand = Math.round(Math.random() * (lengthOfArray - 1));\n    }\n\n    return rand;\n  }\n\n  wait(ms) {\n    var start = new Date().getTime();\n    var end = start;\n\n    while (end < start + ms) {\n      end = new Date().getTime();\n    }\n  }\n\n  handleClick() {\n    const data = getData();\n    this.setState({\n      type: \"load\"\n    });\n    setTimeout(() => {\n      const min = 0;\n      const max = 25;\n      const rand = Math.round(min + Math.random() * (max - min));\n      Promise.all(data).then(res => {\n        this.setState({\n          type: data[rand].key.toUpperCase(),\n          number: rand,\n          message: data[rand].message\n        });\n      });\n    }, 2000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rand_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"rand_button\",\n      onClick: this.handleClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"div\", {\n      className: \"rand_result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.type == \"load\" ? React.createElement(Spinner, {\n      className: \"load\",\n      color: \"Yellow\",\n      name: \"pacman\",\n      fadeIn: \"quarter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"rand_message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.number + 1), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.type), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.message))));\n  }\n\n}\n\nexport default Rand;","map":{"version":3,"sources":["S:/Work/random-truth-or-dare/src/Rand.js"],"names":["React","render","Spinner","getData","Rand","Component","constructor","props","handleClick","bind","state","type","number","message","getRandomWithOneExclusion","lengthOfArray","indexToExclude","rand","Math","round","random","wait","ms","start","Date","getTime","end","data","setState","setTimeout","min","max","Promise","all","then","res","key","toUpperCase"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Spinner from 'react-spinkit';\r\nimport './Rand.css';\r\nimport getData  from './Data.js';\r\n\r\n\r\nclass Rand extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = { type:\"Hello\",number:-1, message: \"WELCOME TO TRUTH OR DARE RANDOMIZER\" };\r\n  }\r\n\r\n  getRandomWithOneExclusion(lengthOfArray,indexToExclude){\r\n\r\n    var rand = null;  //an integer\r\n  \r\n      while(rand === null || rand === indexToExclude){\r\n         rand = Math.round(Math.random() * (lengthOfArray - 1));\r\n      }\r\n  \r\n    return rand;\r\n  }\r\n\r\n  wait(ms){\r\n    var start = new Date().getTime();\r\n    var end = start;\r\n    while(end < start + ms) {\r\n      end = new Date().getTime();\r\n   }\r\n }\r\n\r\n  handleClick() {\r\n    const data = getData();\r\n    this.setState({ type: \"load\" });\r\n    setTimeout(() => {\r\n        const min = 0;\r\n        const max = 25;\r\n        const rand = Math.round(min + Math.random() * (max - min));\r\n        \r\n        Promise.all(data).then(res =>{\r\n            this.setState({ type:data[rand].key.toUpperCase() ,number: rand, message: data[rand].message });\r\n        })   \r\n    },2000);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rand_container\">\r\n        <button className=\"rand_button\"\r\n         onClick={this.handleClick.bind(this)}>\r\n         Start\r\n        </button>\r\n        <div className=\"rand_result\">\r\n            {this.state.type ==\"load\" ? (\r\n                <Spinner className=\"load\" color=\"Yellow\" name=\"pacman\" fadeIn=\"quarter\" />\r\n            ) : (\r\n                <div className=\"rand_message\">\r\n                    <h3>{this.state.number+1}</h3>\r\n                    <h3>{this.state.type}</h3>\r\n                    <p>{this.state.message}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rand;"]},"metadata":{},"sourceType":"module"}